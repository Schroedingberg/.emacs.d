% Created 2016-03-18 Fri 20:01
\documentclass[presentation]{beamer}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{fixltx2e}
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{amssymb}
\usepackage{capt-of}
\usepackage{hyperref}
\usepackage{tabu}
\usetheme{default}
\author{Aaron Rebmann}
\date{\today}
\title{}
\hypersetup{
 pdfauthor={Aaron Rebmann},
 pdftitle={},
 pdfkeywords={},
 pdfsubject={},
 pdfcreator={Emacs 24.4.1 (Org mode 8.3.4)}, 
 pdflang={English}}
\begin{document}

\begin{frame}{Outline}
\tableofcontents
\end{frame}

\begin{frame}[fragile,label={sec:orgheadline1}]{Load libraries and set style patterns}
 \begin{verbatim}
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
import numpy as np
import pandas as pd
import scipy as sp
import scipy.constants as con
import scipy.signal  as signal
from custom_data_analysis import statistical_filter
from matplotlib import rc
import os, sys
from peakmark import annotate_peaks
import re
import math
slidesfacecolor = (0.98,0.98,0.98)
rc('font',**{'family':'serif','serif':['Source Serif Pro']})
rc('text', usetex=True)
rc('legend',**{'fontsize':16})

def normalize_vector(X):
    modulus = math.sqrt(sum(X**2))
    return X/modulus
sns.set_style("white")
\end{verbatim}
\end{frame}

\begin{frame}[fragile,label={sec:orgheadline2}]{Load NMR data}
 \begin{verbatim}
%matplotlib inline
# List all files that are in the data directory
path = "/home/aaron/Dropbox/polyamides/data/NMR/Aaron/"
DIR = os.listdir(path)
# Convenience function for split
sp = lambda s : s.split(".")


samples = [re.sub(pattern=r".csv",repl="",string=f) for f in DIR if ".csv" in f]


Names = ["ppm", "y"]
#iterables = [samples, Names]
#index = pd.MultiIndex.from_product(iterables, names = ["Sample", "Parameter"])
#raw_data_list = dict.fromkeys(samples)
data = [pd.read_csv(path+i+".csv",delimiter=r"\t",header = None, names = Names) for i in samples]

z = zip(samples,data)
data = dict(z)
\end{verbatim}
\end{frame}

\begin{frame}[fragile,label={sec:orgheadline3}]{Define plotting functions}
 \begin{verbatim}
def standardplot(name, additives = [], dynapurge = False, normalize = False, filename = None):
    sp = fig.add_subplot(111)
    sp.invert_xaxis()
    d = data[name]
    ppm = d["ppm"]
    y = d["y"]
    
    if normalize:
        y = normalize_vector(y)
    name = re.sub(r'\.[0-9]', "", name)
    sp.plot(ppm,y,linewidth=0.8,label = name)
    for elem in additives:
        d = data[elem]
        ppm = d["ppm"]
        y = d["y"]
        if normalize:
            y = normalize_vector(y)
        sp.plot(ppm,y, linewidth=0.8, label = elem)
    nmr_format(sp)
    sp.legend()
    fig.tight_layout()

    


def multiplot(names, filename):
    sp = fig.add_subplot(111)
    sp.invert_xaxis()
    for elem in names:
        d = data[elem]
        ppm = d["ppm"]
        y = d["y"]
        y = normalize_vector(y)
        nmr_format(sp)
        name = re.sub(r'\.[0-9]', "", elem)
        sp.plot(ppm,y,linewidth=0.8,label = name)
    sp.legend()
    fig.tight_layout()
#   name = re.sub(r'\.|\s', "", name)
    fig.savefig("./Output/"+filename+".eps", facecolor = slidesfacecolor)
    plt.clf()
    




def diffplot(minsub,compare, filename, normalize = False, smooth = False ):
    sp = fig.add_subplot(111)
    sp.invert_xaxis()
    x = data[minsub[0]]["ppm"]
    comp = data[compare]["y"]
    if not normalize:
        a = data[minsub[0]]["y"]
        b = data[minsub[1]]["y"]
    else:
        a = normalize_vector(data[minsub[1]]["y"])
        b = normalize_vector(data[minsub[0]]["y"])
        comp = normalize_vector(comp)
    diff = a-b
    if smooth:
        diff = sg.savitzky_golay(diff,41,4)
        
    sp.plot(x,diff, linewidth=0.8, label =  re.sub(r"\.[0-9]","",minsub[0]+"-"+minsub[1]))
    sp.plot(x,comp,linewidth=0.8, label = re.sub(r"\.[0-9]","",compare))
    nmr_format(sp)
    sp.legend()
    fig.tight_layout()
    fig.savefig("./Output/"+filename+".eps", facecolor = slidesfacecolor)
    plt.clf()
def nmr_format(ax, xlim):
    ax.set_xlabel("Chemical shift /ppm")
    ax.set_yticklabels([])
    ax.set_xlim(xlim)
\end{verbatim}
\end{frame}

\begin{frame}[fragile,label={sec:orgheadline4}]{Plots}
 \begin{block}{Unirez}
Heterogeneous C-chain length in PA can disturb formation of Hydrogenbonds and thus disturb
network --> More flexible
\begin{verbatim}
#%matplotlib inline
d = data["Unirez13C"]
x = d["ppm"]
y = d["y"]
#print(d)
fig = plt.figure(figsize=(15,8))
ax = fig.add_subplot(111)
nmr_format(ax,(200,-10))
ax.plot(x,y)
\end{verbatim}

\includegraphics[width=.9\linewidth]{/tmp/asdnhlksjdfksdf.png}
\end{block}





\begin{block}{Dynapurge}
\begin{verbatim}
#%matplotlib inline
d = data["Dynapurge13C"]
x = d["ppm"]
y = d["y"]
dU = data["Unirez13C"]
xU = dU["ppm"]
yU = dU["y"]

dTw = data["Twaron13C"]
xTw = dTw["ppm"]
yTw = dTw["y"]

#print(d)
fig1 = plt.figure(figsize=(15,8))
ax = fig1.add_subplot(111)
nmr_format(ax,(200,-10))
ax.plot(x,y)
ax.plot(xTw,yTw)
ax.plot(xU,yU)
\end{verbatim}
\includegraphics[width=.9\linewidth]{/tmp/asdbashdkf.png}
\end{block}







\begin{block}{Twaron powder}
\begin{verbatim}
#%matplotlib inline
d = data["Twaron13C"]
x = d["ppm"]
y = d["y"]
#print(d)
fig2 = plt.figure(figsize = (20,10))
ax = fig2.add_subplot(111)
nmr_format(ax,(200,-10))
ax.plot(x,y)
\end{verbatim}

\includegraphics[width=.9\linewidth]{/tmp/ddsfskdhfksf.png}
\end{block}
\end{frame}



\begin{frame}[label={sec:orgheadline5}]{New presentation for NMR Data}
\begin{itemize}
\item\relax [ ]Dynapurge : No chance to see it in the rubber with NMR
\begin{itemize}
\item Which Dynapurge is it? What is it?
\end{itemize}
\item\relax [ ]Twaron: Prefer proton spectrum
\item\relax [ ]P18: Not in rotor
\item $\square$ Mention need of rotors
\item $\square$ Carbon spectrum of carbon black does not work
\begin{itemize}
\item We want to do more proton measurement of that (Different temperature)--> Signal is an issue here --> We need more of that!
\end{itemize}
\item $\square$ Raman: Summarize the outcome of the raman experiments
\item $\square$ Mention that peak width is antiproportional to the flexibility of the chains
Joel has a slide on that \href{file:///home/aaron/Dropbox/polyamides/Presentations/150911\%20new\%20rubber\%20sample\%20NMR\%20and\%20FTIR\%20spectroscopy\%20analysis.pptx}{\url{file:///home/aaron/Dropbox/polyamides/Presentations/150911} new rubber sample NMR and FTIR spectroscopy analysis.pptx}
\item $\square$ Merge things from Joels presentations with my data
\end{itemize}
\end{frame}
\end{document}